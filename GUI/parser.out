Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> instruccion instrucciones
Rule 2     instrucciones -> instruccion
Rule 3     instruccion -> INICIO_OP A_COR expresion C_COR FINAL
Rule 4     instruccion -> expresion
Rule 5     expresion -> expresion SUMA expresion
Rule 6     expresion -> expresion RES expresion
Rule 7     expresion -> expresion MULT expresion
Rule 8     expresion -> expresion DIV expresion
Rule 9     expresion -> expresion POT expresion
Rule 10    expresion -> RES expresion
Rule 11    expresion -> A_PAR expresion C_PAR
Rule 12    expresion -> NUMERO
Rule 13    expresion -> DEC

Terminals, with rules where they appear

A_COR                : 3
A_PAR                : 11
C_COR                : 3
C_PAR                : 11
DEC                  : 13
DIV                  : 8
FINAL                : 3
INICIO_OP            : 3
MULT                 : 7
NUMERO               : 12
POT                  : 9
RES                  : 6 10
SUMA                 : 5
error                : 

Nonterminals, with rules where they appear

expresion            : 3 4 5 5 6 6 7 7 8 8 9 9 10 11
instruccion          : 1 2
instrucciones        : 1 0

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . instruccion instrucciones
    (2) instrucciones -> . instruccion
    (3) instruccion -> . INICIO_OP A_COR expresion C_COR FINAL
    (4) instruccion -> . expresion
    (5) expresion -> . expresion SUMA expresion
    (6) expresion -> . expresion RES expresion
    (7) expresion -> . expresion MULT expresion
    (8) expresion -> . expresion DIV expresion
    (9) expresion -> . expresion POT expresion
    (10) expresion -> . RES expresion
    (11) expresion -> . A_PAR expresion C_PAR
    (12) expresion -> . NUMERO
    (13) expresion -> . DEC

    INICIO_OP       shift and go to state 3
    RES             shift and go to state 5
    A_PAR           shift and go to state 6
    NUMERO          shift and go to state 7
    DEC             shift and go to state 8

    instrucciones                  shift and go to state 1
    instruccion                    shift and go to state 2
    expresion                      shift and go to state 4

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> instruccion . instrucciones
    (2) instrucciones -> instruccion .
    (1) instrucciones -> . instruccion instrucciones
    (2) instrucciones -> . instruccion
    (3) instruccion -> . INICIO_OP A_COR expresion C_COR FINAL
    (4) instruccion -> . expresion
    (5) expresion -> . expresion SUMA expresion
    (6) expresion -> . expresion RES expresion
    (7) expresion -> . expresion MULT expresion
    (8) expresion -> . expresion DIV expresion
    (9) expresion -> . expresion POT expresion
    (10) expresion -> . RES expresion
    (11) expresion -> . A_PAR expresion C_PAR
    (12) expresion -> . NUMERO
    (13) expresion -> . DEC

    $end            reduce using rule 2 (instrucciones -> instruccion .)
    INICIO_OP       shift and go to state 3
    RES             shift and go to state 5
    A_PAR           shift and go to state 6
    NUMERO          shift and go to state 7
    DEC             shift and go to state 8

    instruccion                    shift and go to state 2
    instrucciones                  shift and go to state 9
    expresion                      shift and go to state 4

state 3

    (3) instruccion -> INICIO_OP . A_COR expresion C_COR FINAL

    A_COR           shift and go to state 10


state 4

    (4) instruccion -> expresion .
    (5) expresion -> expresion . SUMA expresion
    (6) expresion -> expresion . RES expresion
    (7) expresion -> expresion . MULT expresion
    (8) expresion -> expresion . DIV expresion
    (9) expresion -> expresion . POT expresion

  ! shift/reduce conflict for RES resolved as shift
    INICIO_OP       reduce using rule 4 (instruccion -> expresion .)
    A_PAR           reduce using rule 4 (instruccion -> expresion .)
    NUMERO          reduce using rule 4 (instruccion -> expresion .)
    DEC             reduce using rule 4 (instruccion -> expresion .)
    $end            reduce using rule 4 (instruccion -> expresion .)
    SUMA            shift and go to state 11
    RES             shift and go to state 12
    MULT            shift and go to state 13
    DIV             shift and go to state 14
    POT             shift and go to state 15

  ! RES             [ reduce using rule 4 (instruccion -> expresion .) ]


state 5

    (10) expresion -> RES . expresion
    (5) expresion -> . expresion SUMA expresion
    (6) expresion -> . expresion RES expresion
    (7) expresion -> . expresion MULT expresion
    (8) expresion -> . expresion DIV expresion
    (9) expresion -> . expresion POT expresion
    (10) expresion -> . RES expresion
    (11) expresion -> . A_PAR expresion C_PAR
    (12) expresion -> . NUMERO
    (13) expresion -> . DEC

    RES             shift and go to state 5
    A_PAR           shift and go to state 6
    NUMERO          shift and go to state 7
    DEC             shift and go to state 8

    expresion                      shift and go to state 16

state 6

    (11) expresion -> A_PAR . expresion C_PAR
    (5) expresion -> . expresion SUMA expresion
    (6) expresion -> . expresion RES expresion
    (7) expresion -> . expresion MULT expresion
    (8) expresion -> . expresion DIV expresion
    (9) expresion -> . expresion POT expresion
    (10) expresion -> . RES expresion
    (11) expresion -> . A_PAR expresion C_PAR
    (12) expresion -> . NUMERO
    (13) expresion -> . DEC

    RES             shift and go to state 5
    A_PAR           shift and go to state 6
    NUMERO          shift and go to state 7
    DEC             shift and go to state 8

    expresion                      shift and go to state 17

state 7

    (12) expresion -> NUMERO .

    SUMA            reduce using rule 12 (expresion -> NUMERO .)
    RES             reduce using rule 12 (expresion -> NUMERO .)
    MULT            reduce using rule 12 (expresion -> NUMERO .)
    DIV             reduce using rule 12 (expresion -> NUMERO .)
    POT             reduce using rule 12 (expresion -> NUMERO .)
    INICIO_OP       reduce using rule 12 (expresion -> NUMERO .)
    A_PAR           reduce using rule 12 (expresion -> NUMERO .)
    NUMERO          reduce using rule 12 (expresion -> NUMERO .)
    DEC             reduce using rule 12 (expresion -> NUMERO .)
    $end            reduce using rule 12 (expresion -> NUMERO .)
    C_PAR           reduce using rule 12 (expresion -> NUMERO .)
    C_COR           reduce using rule 12 (expresion -> NUMERO .)


state 8

    (13) expresion -> DEC .

    SUMA            reduce using rule 13 (expresion -> DEC .)
    RES             reduce using rule 13 (expresion -> DEC .)
    MULT            reduce using rule 13 (expresion -> DEC .)
    DIV             reduce using rule 13 (expresion -> DEC .)
    POT             reduce using rule 13 (expresion -> DEC .)
    INICIO_OP       reduce using rule 13 (expresion -> DEC .)
    A_PAR           reduce using rule 13 (expresion -> DEC .)
    NUMERO          reduce using rule 13 (expresion -> DEC .)
    DEC             reduce using rule 13 (expresion -> DEC .)
    $end            reduce using rule 13 (expresion -> DEC .)
    C_PAR           reduce using rule 13 (expresion -> DEC .)
    C_COR           reduce using rule 13 (expresion -> DEC .)


state 9

    (1) instrucciones -> instruccion instrucciones .

    $end            reduce using rule 1 (instrucciones -> instruccion instrucciones .)


state 10

    (3) instruccion -> INICIO_OP A_COR . expresion C_COR FINAL
    (5) expresion -> . expresion SUMA expresion
    (6) expresion -> . expresion RES expresion
    (7) expresion -> . expresion MULT expresion
    (8) expresion -> . expresion DIV expresion
    (9) expresion -> . expresion POT expresion
    (10) expresion -> . RES expresion
    (11) expresion -> . A_PAR expresion C_PAR
    (12) expresion -> . NUMERO
    (13) expresion -> . DEC

    RES             shift and go to state 5
    A_PAR           shift and go to state 6
    NUMERO          shift and go to state 7
    DEC             shift and go to state 8

    expresion                      shift and go to state 18

state 11

    (5) expresion -> expresion SUMA . expresion
    (5) expresion -> . expresion SUMA expresion
    (6) expresion -> . expresion RES expresion
    (7) expresion -> . expresion MULT expresion
    (8) expresion -> . expresion DIV expresion
    (9) expresion -> . expresion POT expresion
    (10) expresion -> . RES expresion
    (11) expresion -> . A_PAR expresion C_PAR
    (12) expresion -> . NUMERO
    (13) expresion -> . DEC

    RES             shift and go to state 5
    A_PAR           shift and go to state 6
    NUMERO          shift and go to state 7
    DEC             shift and go to state 8

    expresion                      shift and go to state 19

state 12

    (6) expresion -> expresion RES . expresion
    (5) expresion -> . expresion SUMA expresion
    (6) expresion -> . expresion RES expresion
    (7) expresion -> . expresion MULT expresion
    (8) expresion -> . expresion DIV expresion
    (9) expresion -> . expresion POT expresion
    (10) expresion -> . RES expresion
    (11) expresion -> . A_PAR expresion C_PAR
    (12) expresion -> . NUMERO
    (13) expresion -> . DEC

    RES             shift and go to state 5
    A_PAR           shift and go to state 6
    NUMERO          shift and go to state 7
    DEC             shift and go to state 8

    expresion                      shift and go to state 20

state 13

    (7) expresion -> expresion MULT . expresion
    (5) expresion -> . expresion SUMA expresion
    (6) expresion -> . expresion RES expresion
    (7) expresion -> . expresion MULT expresion
    (8) expresion -> . expresion DIV expresion
    (9) expresion -> . expresion POT expresion
    (10) expresion -> . RES expresion
    (11) expresion -> . A_PAR expresion C_PAR
    (12) expresion -> . NUMERO
    (13) expresion -> . DEC

    RES             shift and go to state 5
    A_PAR           shift and go to state 6
    NUMERO          shift and go to state 7
    DEC             shift and go to state 8

    expresion                      shift and go to state 21

state 14

    (8) expresion -> expresion DIV . expresion
    (5) expresion -> . expresion SUMA expresion
    (6) expresion -> . expresion RES expresion
    (7) expresion -> . expresion MULT expresion
    (8) expresion -> . expresion DIV expresion
    (9) expresion -> . expresion POT expresion
    (10) expresion -> . RES expresion
    (11) expresion -> . A_PAR expresion C_PAR
    (12) expresion -> . NUMERO
    (13) expresion -> . DEC

    RES             shift and go to state 5
    A_PAR           shift and go to state 6
    NUMERO          shift and go to state 7
    DEC             shift and go to state 8

    expresion                      shift and go to state 22

state 15

    (9) expresion -> expresion POT . expresion
    (5) expresion -> . expresion SUMA expresion
    (6) expresion -> . expresion RES expresion
    (7) expresion -> . expresion MULT expresion
    (8) expresion -> . expresion DIV expresion
    (9) expresion -> . expresion POT expresion
    (10) expresion -> . RES expresion
    (11) expresion -> . A_PAR expresion C_PAR
    (12) expresion -> . NUMERO
    (13) expresion -> . DEC

    RES             shift and go to state 5
    A_PAR           shift and go to state 6
    NUMERO          shift and go to state 7
    DEC             shift and go to state 8

    expresion                      shift and go to state 23

state 16

    (10) expresion -> RES expresion .
    (5) expresion -> expresion . SUMA expresion
    (6) expresion -> expresion . RES expresion
    (7) expresion -> expresion . MULT expresion
    (8) expresion -> expresion . DIV expresion
    (9) expresion -> expresion . POT expresion

    SUMA            reduce using rule 10 (expresion -> RES expresion .)
    RES             reduce using rule 10 (expresion -> RES expresion .)
    MULT            reduce using rule 10 (expresion -> RES expresion .)
    DIV             reduce using rule 10 (expresion -> RES expresion .)
    POT             reduce using rule 10 (expresion -> RES expresion .)
    INICIO_OP       reduce using rule 10 (expresion -> RES expresion .)
    A_PAR           reduce using rule 10 (expresion -> RES expresion .)
    NUMERO          reduce using rule 10 (expresion -> RES expresion .)
    DEC             reduce using rule 10 (expresion -> RES expresion .)
    $end            reduce using rule 10 (expresion -> RES expresion .)
    C_PAR           reduce using rule 10 (expresion -> RES expresion .)
    C_COR           reduce using rule 10 (expresion -> RES expresion .)

  ! SUMA            [ shift and go to state 11 ]
  ! RES             [ shift and go to state 12 ]
  ! MULT            [ shift and go to state 13 ]
  ! DIV             [ shift and go to state 14 ]
  ! POT             [ shift and go to state 15 ]


state 17

    (11) expresion -> A_PAR expresion . C_PAR
    (5) expresion -> expresion . SUMA expresion
    (6) expresion -> expresion . RES expresion
    (7) expresion -> expresion . MULT expresion
    (8) expresion -> expresion . DIV expresion
    (9) expresion -> expresion . POT expresion

    C_PAR           shift and go to state 24
    SUMA            shift and go to state 11
    RES             shift and go to state 12
    MULT            shift and go to state 13
    DIV             shift and go to state 14
    POT             shift and go to state 15


state 18

    (3) instruccion -> INICIO_OP A_COR expresion . C_COR FINAL
    (5) expresion -> expresion . SUMA expresion
    (6) expresion -> expresion . RES expresion
    (7) expresion -> expresion . MULT expresion
    (8) expresion -> expresion . DIV expresion
    (9) expresion -> expresion . POT expresion

    C_COR           shift and go to state 25
    SUMA            shift and go to state 11
    RES             shift and go to state 12
    MULT            shift and go to state 13
    DIV             shift and go to state 14
    POT             shift and go to state 15


state 19

    (5) expresion -> expresion SUMA expresion .
    (5) expresion -> expresion . SUMA expresion
    (6) expresion -> expresion . RES expresion
    (7) expresion -> expresion . MULT expresion
    (8) expresion -> expresion . DIV expresion
    (9) expresion -> expresion . POT expresion

    SUMA            reduce using rule 5 (expresion -> expresion SUMA expresion .)
    RES             reduce using rule 5 (expresion -> expresion SUMA expresion .)
    INICIO_OP       reduce using rule 5 (expresion -> expresion SUMA expresion .)
    A_PAR           reduce using rule 5 (expresion -> expresion SUMA expresion .)
    NUMERO          reduce using rule 5 (expresion -> expresion SUMA expresion .)
    DEC             reduce using rule 5 (expresion -> expresion SUMA expresion .)
    $end            reduce using rule 5 (expresion -> expresion SUMA expresion .)
    C_PAR           reduce using rule 5 (expresion -> expresion SUMA expresion .)
    C_COR           reduce using rule 5 (expresion -> expresion SUMA expresion .)
    MULT            shift and go to state 13
    DIV             shift and go to state 14
    POT             shift and go to state 15

  ! MULT            [ reduce using rule 5 (expresion -> expresion SUMA expresion .) ]
  ! DIV             [ reduce using rule 5 (expresion -> expresion SUMA expresion .) ]
  ! POT             [ reduce using rule 5 (expresion -> expresion SUMA expresion .) ]
  ! SUMA            [ shift and go to state 11 ]
  ! RES             [ shift and go to state 12 ]


state 20

    (6) expresion -> expresion RES expresion .
    (5) expresion -> expresion . SUMA expresion
    (6) expresion -> expresion . RES expresion
    (7) expresion -> expresion . MULT expresion
    (8) expresion -> expresion . DIV expresion
    (9) expresion -> expresion . POT expresion

    SUMA            reduce using rule 6 (expresion -> expresion RES expresion .)
    RES             reduce using rule 6 (expresion -> expresion RES expresion .)
    INICIO_OP       reduce using rule 6 (expresion -> expresion RES expresion .)
    A_PAR           reduce using rule 6 (expresion -> expresion RES expresion .)
    NUMERO          reduce using rule 6 (expresion -> expresion RES expresion .)
    DEC             reduce using rule 6 (expresion -> expresion RES expresion .)
    $end            reduce using rule 6 (expresion -> expresion RES expresion .)
    C_PAR           reduce using rule 6 (expresion -> expresion RES expresion .)
    C_COR           reduce using rule 6 (expresion -> expresion RES expresion .)
    MULT            shift and go to state 13
    DIV             shift and go to state 14
    POT             shift and go to state 15

  ! MULT            [ reduce using rule 6 (expresion -> expresion RES expresion .) ]
  ! DIV             [ reduce using rule 6 (expresion -> expresion RES expresion .) ]
  ! POT             [ reduce using rule 6 (expresion -> expresion RES expresion .) ]
  ! SUMA            [ shift and go to state 11 ]
  ! RES             [ shift and go to state 12 ]


state 21

    (7) expresion -> expresion MULT expresion .
    (5) expresion -> expresion . SUMA expresion
    (6) expresion -> expresion . RES expresion
    (7) expresion -> expresion . MULT expresion
    (8) expresion -> expresion . DIV expresion
    (9) expresion -> expresion . POT expresion

    SUMA            reduce using rule 7 (expresion -> expresion MULT expresion .)
    RES             reduce using rule 7 (expresion -> expresion MULT expresion .)
    MULT            reduce using rule 7 (expresion -> expresion MULT expresion .)
    DIV             reduce using rule 7 (expresion -> expresion MULT expresion .)
    POT             reduce using rule 7 (expresion -> expresion MULT expresion .)
    INICIO_OP       reduce using rule 7 (expresion -> expresion MULT expresion .)
    A_PAR           reduce using rule 7 (expresion -> expresion MULT expresion .)
    NUMERO          reduce using rule 7 (expresion -> expresion MULT expresion .)
    DEC             reduce using rule 7 (expresion -> expresion MULT expresion .)
    $end            reduce using rule 7 (expresion -> expresion MULT expresion .)
    C_PAR           reduce using rule 7 (expresion -> expresion MULT expresion .)
    C_COR           reduce using rule 7 (expresion -> expresion MULT expresion .)

  ! SUMA            [ shift and go to state 11 ]
  ! RES             [ shift and go to state 12 ]
  ! MULT            [ shift and go to state 13 ]
  ! DIV             [ shift and go to state 14 ]
  ! POT             [ shift and go to state 15 ]


state 22

    (8) expresion -> expresion DIV expresion .
    (5) expresion -> expresion . SUMA expresion
    (6) expresion -> expresion . RES expresion
    (7) expresion -> expresion . MULT expresion
    (8) expresion -> expresion . DIV expresion
    (9) expresion -> expresion . POT expresion

    SUMA            reduce using rule 8 (expresion -> expresion DIV expresion .)
    RES             reduce using rule 8 (expresion -> expresion DIV expresion .)
    MULT            reduce using rule 8 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 8 (expresion -> expresion DIV expresion .)
    POT             reduce using rule 8 (expresion -> expresion DIV expresion .)
    INICIO_OP       reduce using rule 8 (expresion -> expresion DIV expresion .)
    A_PAR           reduce using rule 8 (expresion -> expresion DIV expresion .)
    NUMERO          reduce using rule 8 (expresion -> expresion DIV expresion .)
    DEC             reduce using rule 8 (expresion -> expresion DIV expresion .)
    $end            reduce using rule 8 (expresion -> expresion DIV expresion .)
    C_PAR           reduce using rule 8 (expresion -> expresion DIV expresion .)
    C_COR           reduce using rule 8 (expresion -> expresion DIV expresion .)

  ! SUMA            [ shift and go to state 11 ]
  ! RES             [ shift and go to state 12 ]
  ! MULT            [ shift and go to state 13 ]
  ! DIV             [ shift and go to state 14 ]
  ! POT             [ shift and go to state 15 ]


state 23

    (9) expresion -> expresion POT expresion .
    (5) expresion -> expresion . SUMA expresion
    (6) expresion -> expresion . RES expresion
    (7) expresion -> expresion . MULT expresion
    (8) expresion -> expresion . DIV expresion
    (9) expresion -> expresion . POT expresion

    SUMA            reduce using rule 9 (expresion -> expresion POT expresion .)
    RES             reduce using rule 9 (expresion -> expresion POT expresion .)
    MULT            reduce using rule 9 (expresion -> expresion POT expresion .)
    DIV             reduce using rule 9 (expresion -> expresion POT expresion .)
    POT             reduce using rule 9 (expresion -> expresion POT expresion .)
    INICIO_OP       reduce using rule 9 (expresion -> expresion POT expresion .)
    A_PAR           reduce using rule 9 (expresion -> expresion POT expresion .)
    NUMERO          reduce using rule 9 (expresion -> expresion POT expresion .)
    DEC             reduce using rule 9 (expresion -> expresion POT expresion .)
    $end            reduce using rule 9 (expresion -> expresion POT expresion .)
    C_PAR           reduce using rule 9 (expresion -> expresion POT expresion .)
    C_COR           reduce using rule 9 (expresion -> expresion POT expresion .)

  ! SUMA            [ shift and go to state 11 ]
  ! RES             [ shift and go to state 12 ]
  ! MULT            [ shift and go to state 13 ]
  ! DIV             [ shift and go to state 14 ]
  ! POT             [ shift and go to state 15 ]


state 24

    (11) expresion -> A_PAR expresion C_PAR .

    SUMA            reduce using rule 11 (expresion -> A_PAR expresion C_PAR .)
    RES             reduce using rule 11 (expresion -> A_PAR expresion C_PAR .)
    MULT            reduce using rule 11 (expresion -> A_PAR expresion C_PAR .)
    DIV             reduce using rule 11 (expresion -> A_PAR expresion C_PAR .)
    POT             reduce using rule 11 (expresion -> A_PAR expresion C_PAR .)
    INICIO_OP       reduce using rule 11 (expresion -> A_PAR expresion C_PAR .)
    A_PAR           reduce using rule 11 (expresion -> A_PAR expresion C_PAR .)
    NUMERO          reduce using rule 11 (expresion -> A_PAR expresion C_PAR .)
    DEC             reduce using rule 11 (expresion -> A_PAR expresion C_PAR .)
    $end            reduce using rule 11 (expresion -> A_PAR expresion C_PAR .)
    C_PAR           reduce using rule 11 (expresion -> A_PAR expresion C_PAR .)
    C_COR           reduce using rule 11 (expresion -> A_PAR expresion C_PAR .)


state 25

    (3) instruccion -> INICIO_OP A_COR expresion C_COR . FINAL

    FINAL           shift and go to state 26


state 26

    (3) instruccion -> INICIO_OP A_COR expresion C_COR FINAL .

    INICIO_OP       reduce using rule 3 (instruccion -> INICIO_OP A_COR expresion C_COR FINAL .)
    RES             reduce using rule 3 (instruccion -> INICIO_OP A_COR expresion C_COR FINAL .)
    A_PAR           reduce using rule 3 (instruccion -> INICIO_OP A_COR expresion C_COR FINAL .)
    NUMERO          reduce using rule 3 (instruccion -> INICIO_OP A_COR expresion C_COR FINAL .)
    DEC             reduce using rule 3 (instruccion -> INICIO_OP A_COR expresion C_COR FINAL .)
    $end            reduce using rule 3 (instruccion -> INICIO_OP A_COR expresion C_COR FINAL .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RES in state 4 resolved as shift
